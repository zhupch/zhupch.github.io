<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>驱魔鮔</title>
  
  <subtitle>hello world</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-18T14:37:42.097Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>喝敌敌畏的猪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>换系统后怎么继续使用hexo</title>
    <link href="http://yoursite.com/2018/09/18/%E6%8D%A2%E7%B3%BB%E7%BB%9F%E5%90%8E%E6%80%8E%E4%B9%88%E7%BB%A7%E7%BB%AD%E4%BD%BF%E7%94%A8hexo/"/>
    <id>http://yoursite.com/2018/09/18/换系统后怎么继续使用hexo/</id>
    <published>2018-09-18T13:06:59.000Z</published>
    <updated>2018-09-18T14:37:42.097Z</updated>
    
    <content type="html"><![CDATA[<hr><pre><code>暑假回来以后重新装了一个系统，装完系统以后的一天发现我博客不能用了，然后各种去网上找各位道友  的渡劫的经验，显然是找了好多，也进了很多的坑，下面分享一下我的一些坑吧！！</code></pre><hr><a id="more"></a><h3 id="准备材料"><a href="#准备材料" class="headerlink" title="准备材料"></a>准备材料</h3><ul><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a> 我是以前就有没有删除的，所以没有去下</li></ul><hr><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><ul><li>你的hexo的文件夹没有删除（如果没有的话，只用重新去搭建一个了）<br><img src="http://ww1.sinaimg.cn/large/006TQP4ygy1fve0jmg6phj30lr0bf3z7.jpg" alt=""></li></ul><hr><p>按照网上别人的教程,直接输入下面的命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo --save</span><br></pre></td></tr></table></figure></p><p>但是我不行，当然主要是我已经以前安装了node.js了，你可以检查一下，在控制台上输入node -v,如果显示的是版本号，说明就对了，没有的话就要去配置环境变量了,具体的怎么去配置我就不多啰嗦了。<br>我是没有配置环境变量，所以会报错，所以如果你安装了node.js的话，就要去配置环境变量了，把你们以前安装的node.js的路径放在Path后面（不是覆盖，直接追加，记得带前面要有分号）<br>然后我接着去试着用了上面的代码，可以了，接着按照他的教程走下去<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入 hexo g</span><br></pre></td></tr></table></figure></p><p>结果又一次报错了 hexo :command not found,我的天，内心是有点奔溃的哈<br>然后我又去找了问题，结果得知又是环境变量没有配置（眼冒金星）。好吧，接着咯，我又把hexo（就是我上面提到的那个文件夹）里的bin目录的路径放在Path后面，再一次执行，hexo可以了，然后因为重新来过了，会提示你 :不知道你是谁,你需要执行一下下面的命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>最后就是.ssh的配置了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C “你的GitHub注册邮箱”</span><br></pre></td></tr></table></figure></p><p>连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。打开id_rsa.pub文件，将里面的一串字符复制到github中的setting，如下图<br><img src="http://ww1.sinaimg.cn/large/006TQP4ygy1fve1ji6scuj311i0kjgo1.jpg" alt=""><br>大功告成了，又可以愉快的玩耍</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;pre&gt;&lt;code&gt;暑假回来以后重新装了一个系统，装完系统以后的一天发现我博客不能用了，然后各种去网上找各位道友  
的渡劫的经验，显然是找了好多，也进了很多的坑，下面分享一下我的一些坑吧！！
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习笔记（一）</title>
    <link href="http://yoursite.com/2018/08/21/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2018/08/21/学习笔记（一）/</id>
    <published>2018-08-21T02:52:44.000Z</published>
    <updated>2018-09-21T04:41:48.284Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Statement和PreparedStatment的区别"><a href="#Statement和PreparedStatment的区别" class="headerlink" title="Statement和PreparedStatment的区别"></a>Statement和PreparedStatment的区别</h1><h2 id="使用JDBC访问数据库"><a href="#使用JDBC访问数据库" class="headerlink" title="使用JDBC访问数据库"></a>使用JDBC访问数据库</h2><p>我们在学习java时连接数据库的步骤一般都是：</p><ul><li>加载驱动  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(dirvername);</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>建立数据库的连接  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Connection getConnection(String url,String user,String password);</span><br></pre></td></tr></table></figure></li><li><p>创建Statement或者PreparedStatement对象  （今天的主要内容）</p></li><li>执行SQL语句</li><li>如果有结果集ResultSet，则对结果集进行处理</li><li>释放资源<h2 id="Statement"><a href="#Statement" class="headerlink" title="Statement"></a>Statement</h2>Connection对象一般都要获取Statement对象，Statement对象是用来执行SQL语句的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">con=ConnectionFactory.getConnection();</span><br><span class="line">st=con.createStatement();//创建Statement对象</span><br><span class="line">String sql=“”；</span><br><span class="line">st.executeQuery(sql);//执行SQL语句</span><br></pre></td></tr></table></figure></li></ul><h2 id="PreParedStatement"><a href="#PreParedStatement" class="headerlink" title="PreParedStatement"></a>PreParedStatement</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">con=ConnectionFactory.getConnection();</span><br><span class="line">String sql=<span class="string">"insert table (a,b) values(?,?)"</span>;</span><br><span class="line">PreparedStatement pst=con.preparedStatement(sql);</span><br><span class="line">pst.setString(1,table.name);//1，代表第一个问号，table.name值table表中name属性</span><br><span class="line">pst.setString(2,table.num);</span><br><span class="line">pst.execute();</span><br></pre></td></tr></table></figure><p>PreparedStatement对象封装的SQL语句用占位符代表参数，在执行SQL语句前，使用PreparedStatement中定义的这种setXxx方法对参数进行赋值即可，不用去做烦琐的语句拼装工作</p><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p> PreparedStatement是Statement的子接口</p><ul><li>PreparedStatement是用预编译的方式包装SQL语句的，数据库不用每次编译SQL语句，性能比Statement好</li><li>PreparedStatement对象在封装SQL语句时用了占位符，Statement是用SQL语句的拼装。</li><li>PreparedStatement的开销比较大，在执行一次时建议用Statement</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Statement和PreparedStatment的区别&quot;&gt;&lt;a href=&quot;#Statement和PreparedStatment的区别&quot; class=&quot;headerlink&quot; title=&quot;Statement和PreparedStatment的区别&quot;&gt;&lt;/a&gt;Statement和PreparedStatment的区别&lt;/h1&gt;&lt;h2 id=&quot;使用JDBC访问数据库&quot;&gt;&lt;a href=&quot;#使用JDBC访问数据库&quot; class=&quot;headerlink&quot; title=&quot;使用JDBC访问数据库&quot;&gt;&lt;/a&gt;使用JDBC访问数据库&lt;/h2&gt;&lt;p&gt;我们在学习java时连接数据库的步骤一般都是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加载驱动  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Class.forName(dirvername);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于java 控制台输入问题</title>
    <link href="http://yoursite.com/2018/07/23/%E5%85%B3%E4%BA%8Ejava-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%85%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/07/23/关于java-控制台输入问题/</id>
    <published>2018-07-23T02:45:41.000Z</published>
    <updated>2018-07-23T02:55:48.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java输入问题"><a href="#java输入问题" class="headerlink" title="java输入问题"></a>java输入问题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Scanner sc = new Scanner(System.in);</span><br><span class="line">String str=sc.next();</span><br><span class="line">System.out.println(str);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在java中需要在控制台输入一个字符串时，大家肯定会用上面的一段代码，一般来说是没有问题的，但是当你输入的字符串中有空的话，就会有问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当你输入“hello world”时，输出的结果就hello</span><br></pre></td></tr></table></figure></p><p>所以在有空格的情况下不能直接用sc.next。。。。<br>输入中有空格的话，只需要稍稍改一下代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">Scanner sc = new Scanner(System.in);</span><br><span class="line">String str=sc.nextLine();</span><br><span class="line">System.out.println(str);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>就可以了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;java输入问题&quot;&gt;&lt;a href=&quot;#java输入问题&quot; class=&quot;headerlink&quot; title=&quot;java输入问题&quot;&gt;&lt;/a&gt;java输入问题&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MyEclipse重新部署</title>
    <link href="http://yoursite.com/2018/06/23/MyEclipse%E9%87%8D%E6%96%B0%E9%83%A8%E7%BD%B2/"/>
    <id>http://yoursite.com/2018/06/23/MyEclipse重新部署/</id>
    <published>2018-06-23T07:35:14.000Z</published>
    <updated>2018-06-23T07:48:04.812Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jee重新部署问题"><a href="#jee重新部署问题" class="headerlink" title="jee重新部署问题"></a>jee重新部署问题</h1><p>在学习jee时，会遇上一个问题，就是在你修改了一些java代码时，你需要重新发布一下才行，比如你添加了一条语句<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"hello world"</span>);</span><br></pre></td></tr></table></figure></p><p>这个时候如果你不重新发布，浏览器是显示不出这条语句的，如果你是在改错的时候，需要频繁的使用这条语句，每次重新发布又要一段时间，怎么办？？</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在Tomcat安装目录conf文件夹下找到context.xml打开把<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;context&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/context&gt;</span><br></pre></td></tr></table></figure></p><p>改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;context reloadable=&quot;true&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/context&gt;</span><br></pre></td></tr></table></figure></p><p>就OK了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jee重新部署问题&quot;&gt;&lt;a href=&quot;#jee重新部署问题&quot; class=&quot;headerlink&quot; title=&quot;jee重新部署问题&quot;&gt;&lt;/a&gt;jee重新部署问题&lt;/h1&gt;&lt;p&gt;在学习jee时，会遇上一个问题，就是在你修改了一些java代码时，你需要重新发布一下
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java导入包访问限制</title>
    <link href="http://yoursite.com/2018/06/04/java%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/06/04/java中的问题/</id>
    <published>2018-06-04T06:01:50.000Z</published>
    <updated>2018-06-05T02:20:52.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="访问限制：由于对必需的库-D-program-JAVA-lib-rt-jar-具有一定限制，因此无法访问类型-WindowsLookAndFeel"><a href="#访问限制：由于对必需的库-D-program-JAVA-lib-rt-jar-具有一定限制，因此无法访问类型-WindowsLookAndFeel" class="headerlink" title="访问限制：由于对必需的库 D:\program\JAVA\lib\rt.jar 具有一定限制，因此无法访问类型 WindowsLookAndFeel"></a>访问限制：由于对必需的库 D:\program\JAVA\lib\rt.jar 具有一定限制，因此无法访问类型 WindowsLookAndFeel</h1><hr><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">项目  -&gt; 属性 -&gt; Java构建路径-&gt;库  先将【JRE系统库】移除，然后【添加库】再将【JRE系统库】重新添加进去就好了</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;访问限制：由于对必需的库-D-program-JAVA-lib-rt-jar-具有一定限制，因此无法访问类型-WindowsLookAndFeel&quot;&gt;&lt;a href=&quot;#访问限制：由于对必需的库-D-program-JAVA-lib-rt-jar-具有一定限制，因
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>写一篇博客</title>
    <link href="http://yoursite.com/2018/05/20/%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2018/05/20/测试/</id>
    <published>2018-05-20T08:01:40.000Z</published>
    <updated>2018-09-18T13:02:36.255Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006TQP4ygy1fvdzsr63ldj31hc0xcq6d.jpg" alt=""></p><h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006TQP4ygy1fvdzsr63ldj31hc0xcq6d.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;hello-world&quot;&gt;&lt;a href=&quot;#hello-world&quot; class
      
    
    </summary>
    
    
  </entry>
  
</feed>
